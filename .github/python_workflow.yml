name: Flask CI/CD

on:
  push:
    branches:
      - main
      - staging
  release:
    types:
      - created

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  run-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run Tests
        run: |
          python -m pytest

  build:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build Application
        run: |
          # Add your build commands here
          npm install  # Install frontend dependencies (if using Node.js)
	  npm run build  # Build frontend assets

	    
  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Deploy to Staging
        run: |
          # Add your staging deployment commands here
          npm install  # Install frontend dependencies (if using Node.js)
	  npm run build  # Build frontend assets


  deploy-to-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Deploy to Production
        run: |
          # Add your production deployment commands here
	  npm install  # Install frontend dependencies (if using Node.js)
	  npm run build  # Build frontend assets

